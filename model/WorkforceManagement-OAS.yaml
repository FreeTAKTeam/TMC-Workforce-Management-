openapi: 3.0.1
info:
  title: WorkforceManagement
  version: '24.07.16.04'
  description: >-
    new Levio version!!!
    the Workforce Management (WFM) component within the Open Digital Architecture (ODA) framework is designed to optimize the management of an organization's human resources. It integrates various functionalities essential for efficient workforce planning, scheduling, and performance management, ensuring that the right people are in the right place at the right time, and their efforts align with the strategic goals of the enterprise.
    
    Key Features:
    
    Resource Allocation:
    
    Ensures optimal assignment of employees to tasks based on their skills, availability, and business requirements.
    Supports dynamic reallocation in response to changing demands and priorities.
    Scheduling and Rostering:
    
    Automates the creation of work schedules, considering employee preferences, availability, and labor laws.
    Provides real-time adjustments and notifications to handle unexpected absences or changes in workload.
    Time and Attendance:
    
    Tracks employee attendance, hours worked, overtime, and leave.
    Integrates with payroll systems to ensure accurate and timely compensation.
    Performance Management:
    Monitors and evaluates employee performance through key performance indicators (KPIs) and metrics.
    Supports continuous feedback, goal setting, and performance reviews to foster employee development and engagement.
    Compliance and Reporting:
    
    Ensures adherence to labor laws, union agreements, and internal policies.
    Provides comprehensive reporting and analytics to support decision-making and strategic planning.
    Training and Development:
    
    Identifies skill gaps and facilitates employee training and development programs.
    Tracks progress and effectiveness of training initiatives.
    API Integration:
    
    Utilizes standardized APIs for seamless integration with other enterprise systems such as ERP, CRM, and payroll.
    Ensures data consistency and real-time information flow across the organization.
    Manage Field Workforce (MFW):
    
    Manages the lifecycle of work assignments or work orders carried out by the workforce.
    Includes managing workforce staff (employees, contractors, consultants) directly or indirectly employed by the enterprise.
    Manages work assignment queues, staff lists, individual work assignments, fast-track and jeopardy re-assignment capabilities.
    Handles appointment schedules, work orders, forecasting staffing requirements, and work activity time estimates.
    Establishes recall capabilities for out-of-hours staff recall.
    Manages registration and access control processes for scheduling and work assignment data.
    Ensures accurate capture and recording of all assignment and work scheduling details.
    Tracks and monitors usage and access to the MFW system and associated costs.
  contact:
    name: Giu Platania
    url: www.Levio.ca
    email: Giu.Platania@Levio.ca
  license:
    name: Apache 2
paths:
  /Employee:
    post:
      x-scope: public
      tags:
       - Employee
      description: >-
      summary: Creates a new employee record.
      operationId: CreateEmployee
      requestBody:
        $ref: '#/components/requestBodies/Employee'
      responses:
        '200':
          $ref: '#/components/responses/200Employee_post'
    delete:
      x-scope: public
      tags:
       - Employee
      description: >-
      summary: Deletes an existing employee record based on the provided ID.
      operationId: DeleteEmployee
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/200Employee_delete'
    get:
      x-scope: public
      tags:
       - Employee
      description: >-
      summary: Retrieves a list of all employees.
      operationId: ListEmployee
      responses:
        '200':
          $ref: '#/components/responses/200Employee_get'
    patch:
      x-scope: public
      tags:
       - Employee
      description: >-
      summary: Updates an existing employee record.
      operationId: PatchEmployee
      requestBody:
        $ref: '#/components/requestBodies/Employee'
      responses:
        '200':
          $ref: '#/components/responses/200Employee_patch'
  /Region:
    post:
      x-scope: public
      tags:
       - Region
      description: >-
      summary: Create a new region
      operationId: CreateRegion
      requestBody:
        $ref: '#/components/requestBodies/Region'
      responses:
        '200':
          $ref: '#/components/responses/200Region_post'
    delete:
      x-scope: public
      tags:
       - Region
      description: >-
      summary: Delete by ID a Region
      operationId: DeleteRegion
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/200Region_delete'
    get:
      x-scope: public
      tags:
       - Region
      description: >-
      summary: Returns a list of all Regions
      operationId: ListRegion
      responses:
        '200':
          $ref: '#/components/responses/200Region_get'
    patch:
      x-scope: public
      tags:
       - Region
      description: >-
      summary: Unpdate by ID a Region
      operationId: PatchRegion
      requestBody:
        $ref: '#/components/requestBodies/Region'
      responses:
        '200':
          $ref: '#/components/responses/200Region_patch'
  /Money:
    post:
      x-scope: public
      tags:
       - Money
      description: >-
      summary: Creates a new Money record.
      operationId: CreateMoney
      requestBody:
        $ref: '#/components/requestBodies/Money'
      responses:
        '200':
          $ref: '#/components/responses/200Money_post'
    delete:
      x-scope: public
      tags:
       - Money
      description: >-
      summary: Deletes an existing Money record based on the provided ID.
      operationId: DeleteMoney
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/200Money_delete'
    get:
      x-scope: public
      tags:
       - Money
      description: >-
      summary: Retrieves a list of all Money
      operationId: ListMoney
      responses:
        '200':
          $ref: '#/components/responses/200Money_get'
    patch:
      x-scope: public
      tags:
       - Money
      description: >-
      summary: Updates an existing Money record.
      operationId: PatchMoney
      requestBody:
        $ref: '#/components/requestBodies/Money'
      responses:
        '200':
          $ref: '#/components/responses/200Money_patch'
  /Money/{id}:
    get:
      x-scope: public
      tags:
       - Money
      description: >-
      summary: retrieve an existing Money record based on the provided ID.
      operationId: RetreiveMoney
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200Money_get'
  /Activity/Metric/TimeEfficiency:
    post:
      x-scope: package
      tags:
       - Activity
      description: >-
        retrieve a list of all Activity and calculate the average difference between Activity.plannedDuration and Activity.actualDuration returning a float value in this format ##,##
      summary: Activity Metric TimeEfficiency
      operationId: calculateActivityTimeEfficiency
      responses:
        '200':
          $ref: '#/components/responses/200'
  /Employee/{id}:
    get:
      x-scope: public
      tags:
       - Employee
      description: >-
      summary: Return by ID an Employee
      operationId: RetreiveEmployee
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200Employee_get'
  /Schedule:
    post:
      x-scope: public
      tags:
       - Schedule
      description: >-
      summary: Create a new Schedule
      operationId: CreateSchedule
      requestBody:
        $ref: '#/components/requestBodies/Schedule'
      responses:
        '200':
          $ref: '#/components/responses/200Schedule_post'
    delete:
      x-scope: public
      tags:
       - Schedule
      description: >-
      summary: Delete by ID a Schehdule
      operationId: DeleteSchedule
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/200Schedule_delete'
    get:
      x-scope: public
      tags:
       - Schedule
      description: >-
      summary: Returns a list of all Schedules
      operationId: ListSchedule
      responses:
        '200':
          $ref: '#/components/responses/200Schedule_get'
    patch:
      x-scope: public
      tags:
       - Schedule
      description: >-
      summary: Unpdate by ID a Schedule
      operationId: PatchSchedule
      requestBody:
        $ref: '#/components/requestBodies/Schedule'
      responses:
        '200':
          $ref: '#/components/responses/200Schedule_patch'
  /Region/{id}:
    get:
      x-scope: public
      tags:
       - Region
      description: >-
      summary: Return by ID a Region
      operationId: RetreiveRegion
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200Region_get'
  /Schedule/{id}:
    get:
      x-scope: public
      tags:
       - Schedule
      description: >-
      summary: Return by ID a Schedule
      operationId: RetreiveSchedule
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200Schedule_get'
  /Activity:
    post:
      x-scope: public
      tags:
       - Activity
      description: >-
      summary: Activity creation
      operationId: CreateActivity
      requestBody:
        $ref: '#/components/requestBodies/Activity'
      responses:
        '200':
          $ref: '#/components/responses/200Activity_post'
    delete:
      x-scope: public
      tags:
       - Activity
      description: >-
      summary: Delete by ID an Activity
      operationId: DeleteActivity
      parameters:
        - $ref: '#/components/parameters/ID'
      responses:
        '200':
          $ref: '#/components/responses/200Activity_delete'
    get:
      x-scope: public
      tags:
       - Activity
      description: >-
      summary: Returns a list of all Activities
      operationId: ListActivity
      responses:
        '200':
          $ref: '#/components/responses/200Activity_get'
    patch:
      x-scope: public
      tags:
       - Activity
      description: >-
      summary: Unpdate by ID an Activity
      operationId: PatchActivity
      requestBody:
        $ref: '#/components/requestBodies/Activity'
      responses:
        '200':
          $ref: '#/components/responses/200Activity_patch'
  /Activity/{id}:
    get:
      x-scope: public
      tags:
       - Activity
      description: >-
      summary: Return by ID an Activity
      operationId: RetreiveActivity
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200Activity_get'
components:
  schemas:
    Activity:
      allOf:
        - $ref: '#/components/schemas/ProjectElement'
        - type: object
          properties:
            activityNr:
              type: string
              description: >-
            name:
              type: string
              description: >-
            status:
              type: string
              description: >-
            input:
              type: string
              description: >-
            output:
              type: string
              description: >-
            plannedStart:
              type: string
              description: >-
            plannedEnd:
              type: string
              description: >-
            plannedTenure:
              type: string
              description: >-
            ActivityDoneFor:
              type: string
              description: >-
            actualCost:
              description: >-
              nullable: true
              type: string
              x-reference: '#/components/schemas/Money'
            ActivityReferences:
              description: >-
              nullable: false
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/Activity'
    Money:
      allOf:
        - type: object
          properties:
            unit:
              type: string
              description: >-
                Currency (ISO4217 norm uses 3 letters to define the currency)
            value:
              type: string
              description: >-
                A signed floating point number, the meaning of the sign is according to the context of the API that uses this Data type
    ProjectElement:
      allOf:
        - type: object
          properties:
            plannedDuration:
              type: string
              description: >-
            actualDuration:
              type: string
              description: >-
            currentDuration:
              type: string
              description: >-
            status:
              type: string
              description: >-
            priority:
              type: string
              description: >-
            timingConstraint:
              type: string
              description: >-
    Employee:
      allOf:
        - type: object
          properties:
            EmplNumber:
              type: integer
              description: >-
            LastName:
              type: string
              description: >-
            FirstName:
              type: string
              description: >-
            MiddleName:
              type: string
              description: >-
            isManager:
              type: string
              description: >-
            RegionID:
              type: integer
              description: >-
            EmplStreet1:
              type: string
              description: >-
            EmplStreet2:
              type: string
              description: >-
            EmplPostalCode:
              type: string
              description: >-
            EmplCity:
              type: string
              description: >-
            EmplSalary:
              type: string
              description: >-
            is Manager of:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/Employee'
            responsible for:
              description: >-
              nullable: true
              type: string
              x-reference: '#/components/schemas/Region'
    Region:
      allOf:
        - type: object
          properties:
            RegionID:
              type: integer
              description: >-
            RegionName:
              type: string
              description: >-
    Schedule:
      allOf:
        - type: object
          properties:
            employee:
              description: >-
              nullable: true
              type: string
              x-reference: '#/components/schemas/Employee'
            activity:
              description: >-
              nullable: false
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/Activity'
    Error:
      description: Error
  parameters:
    ID:
      name: id
      required: true
      description: >-
        TODO
      schema:
        type: string
      in: query
    id:
      name: id
      required: true
      description: >-
        TODO
      schema:
        type: string
      in: path
  responses:
    200Employee_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
    200Employee_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
    200Employee_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
    200Employee_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
    200Region_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
    200Region_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
    200Region_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
    200Region_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
    200Money_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Money'
    200Money_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Money'
    200Money_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Money'
    200Money_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Money'
    200Schedule_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
    200Schedule_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
    200Schedule_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
    200Schedule_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
    200Activity_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity'
    200Activity_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity'
    200Activity_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity'
    200Activity_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity'
    '200':
      description: OK
    '201':
      description: Added Object
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    'Error':
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    Money:
      description: >-
        A base / value business entity used to represent money
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Money'
      required: true
    Employee:
      description: >-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Employee'
      required: true
    Schedule:
      description: >-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Schedule'
      required: true
    Activity:
      description: >-
        A small item of work, that aligns to a task in a process
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Activity'
      required: true
    Region:
      description: >-
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Region'
      required: true
x-uml-relationships:
  
  - name: "actualCost"
    x-ea-guid: FE21224F-BD0C-44e6-BFF8-5B07C2179FC9
    source:
      schema: "#/components/schemas/Activity"
      multiplicity: "1..1"
      navigability: Non-Navigable
    target:
      schema: "#/components/schemas/Money"
      multiplicity: "1..1"
      navigability: Navigable
  - name: "ActivityReferences"
    x-ea-guid: 0014C998-A910-43c4-AC56-5E9C04D875DC
    source:
      schema: "#/components/schemas/Activity"
      multiplicity: "0..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/Activity"
      multiplicity: "0..-1"
      navigability: Unspecified
  - name: "is Manager of"
    x-ea-guid: 591A1E72-7063-410d-BABF-232327C6B0A6
    source:
      schema: "#/components/schemas/Employee"
      multiplicity: "1..1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/Employee"
      multiplicity: "1..-1"
      navigability: Unspecified
  - name: "responsible for"
    x-ea-guid: D0EFC47F-321D-411c-B279-98C09DC3A98F
    source:
      schema: "#/components/schemas/Employee"
      multiplicity: "1..1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/Region"
      multiplicity: "1..1"
      navigability: Navigable
  - name: "employee"
    x-ea-guid: 2B2FB504-A00D-4085-B175-B0C55526DF6A
    source:
      schema: "#/components/schemas/Schedule"
      multiplicity: "1..1"
      navigability: Non-Navigable
    target:
      schema: "#/components/schemas/Employee"
      multiplicity: "1..1"
      navigability: Navigable
  - name: "activity"
    x-ea-guid: B02B67A3-F8D0-46d9-9182-2714ABD8B8C0
    source:
      schema: "#/components/schemas/Schedule"
      multiplicity: "1..1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/Activity"
      multiplicity: "0..-1"
      navigability: Navigable

